qdic = {1:'time', 2:'mass', 3:'x-momentum', 4:'y-momentum', 5:'z-momentum', 6:'E_total', 7:'E_kinetic', 8:'E_internal', 9:'E_grav', 10:'explosion_energy', 11:'E_bind,gain', 12:'mean_shock_radius', 13:'min_shock_radius', 14:'mass_accretion_rate', 15:'max_shock_radius', 16:'magnetic_energy', 17:'central_density', 18:'net_heating_rate,gain', 19:'mass_in_gain_region', 20:'avg_entropy_in_gain', 21:'neutron_star_mass', 22:'pns_rotation_period', 23:'pns-x', 24:'pns-y', 25:'pns-z', 26:'com-x', 27:'com-y', 28:'com-z', 29:'average_radius_of_PNS', 30:'correct_PNS_radius', 31:'E_kinetic,theta,gain', 32:'E_kinetic,phi,gain', 33:'max(c_s^/v_esc^2)', 34:'M1_lum_tot_nue', 35:'M1_lum_tot_anue', 36:'M1_lum_tot_nux', 37:'M1_aveE_nue', 38:'M1_aveE_anue', 39:'M1_aveE_nux', 40:'M1_rmsE_nue', 41:'M1_rmsE_anue', 42:'M1_rmsE_nux', 43:'R_nue', 44:'R_anue', 45:'R_nux', 46:'ddot_quadrupole_xx', 47:'ddot_quadrupole_yx=xy', 48:'ddot_quadrupole_yy', 49:'ddot_quadrupole_zx=xz', 50:'ddot_quadrupole_zy=yz', 51:'ddot_quadrupole_zz', 52:'strain'}
qdic = {v: k for k, v in qdic.iteritems()} #Invert the mapping so that you can specify the name of the quantity, and the dictionary returns the column number
